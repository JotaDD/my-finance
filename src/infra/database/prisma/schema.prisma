// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name               String
  email              String
  hashedPassword     String
  hashedRefreshToken String?

  @@map("users")
}

model IncomeCategory {
  id        String   @id @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name   String   @unique
  income Income[]

  @@map("incomeCategories")
}

model Income {
  id        String   @id @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  payDay      String
  description String

  incomeCategory IncomeCategory @relation(fields: [categoryId], references: [id])
  categoryId     String         @unique

  @@map("incomes")
}

model ExpenseCategory {
  id        String   @id @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name    String    @unique
  expense Expense[]

  @@map("expenseCategories")
}

model Expense {
  id        String   @id @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  description String
  amount      Float
  date        DateTime

  ExpenseCategory ExpenseCategory? @relation(fields: [categoryId], references: [id])
  categoryId      String?

  @@map("expenses")
}
